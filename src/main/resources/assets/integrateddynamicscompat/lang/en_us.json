{
    "_comment": "## ----- Mod Compats ----- ###",

    "_comment": "# ----- JEI ----- ##",

    "error.jei.integrateddynamics.recipetransfer.recipe.toobig.desc": "Too big for the Logic Programmer recipe pattern.",

    "_comment": "# ----- Charset ----- ##",

    "_comment": "# Aspects",
    "aspect.aspects.integrateddynamics.read.itemstack.charsetpipe.content": "Pipe Content",
    "aspect.aspects.integrateddynamics.read.itemstack.charsetpipe.content.info": "The item currently going through this pipe.",
    "aspect.aspects.integrateddynamics.read.list.charsetpipe.contents": "Pipe Contents",
    "aspect.aspects.integrateddynamics.read.list.charsetpipe.contents.info": "The items currently going through this pipe.",
    "aspect.aspects.integrateddynamics.read.boolean.charsetpipe.hascontents": "Pipe Has Contents",
    "aspect.aspects.integrateddynamics.read.boolean.charsetpipe.hascontents.info": "If an item is going through this pipe.",
    "aspect.aspects.integrateddynamics.read.boolean.charsetpipe.applicable": "Is Pipe",
    "aspect.aspects.integrateddynamics.read.boolean.charsetpipe.applicable.info": "If the target block is a pipe.",

    "aspect.aspects.integrateddynamics.write.boolean.charsetpipe.shifter": "Pipe Shift",
    "aspect.aspects.integrateddynamics.write.boolean.charsetpipe.shifter.info": "Enable pipe item shifting",
    "aspect.aspects.integrateddynamics.write.itemstack.charsetpipe.shifter": "Single Filtered Item Pipe Shift",
    "aspect.aspects.integrateddynamics.write.itemstack.charsetpipe.shifter.info": "Enable pipe item shifting for the given item",
    "aspect.aspects.integrateddynamics.write.fluidstack.charsetpipe.shifterfluid": "Single Filtered Fluid Pipe Shift",
    "aspect.aspects.integrateddynamics.write.fluidstack.charsetpipe.shifterfluid.info": "Enable pipe fluid shifting for the given fluid",
    "aspect.aspects.integrateddynamics.write.list.charsetpipe.shifter": "Filtered Pipe Item Shift",
    "aspect.aspects.integrateddynamics.write.list.charsetpipe.shifter.info": "Enable pipe item shifting for the given items",
    "aspect.aspects.integrateddynamics.write.list.charsetpipe.shifterfluid": "Filtered Pipe Fluid Shift",
    "aspect.aspects.integrateddynamics.write.list.charsetpipe.shifterfluid.info": "Enable pipe fluid shifting for the given items",
    "aspect.aspects.integrateddynamics.write.operator.charsetpipe.shifter": "Predicate Item Pipe Shift",
    "aspect.aspects.integrateddynamics.write.operator.charsetpipe.shifter.info": "Enable pipe item shifting for all items that match the given predicate",
    "aspect.aspects.integrateddynamics.write.operator.charsetpipe.shifterfluid": "Predicate Fluid Pipe Shift",
    "aspect.aspects.integrateddynamics.write.operator.charsetpipe.shifterfluid.info": "Enable pipe fluid shifting for all fluids that match the given predicate",

    "_comment": "# ----- Thaumcraft ----- ##",

    "_comment": "# Value Types",
    "valuetype.valuetypes.integrateddynamics.thaumcraftaspect": "Thaumcraft Aspect",
    "valuetype.integrateddynamics.error.thaumcraftaspect.no_aspect": "The inserted item contains no aspects.",

    "_comment": "# Aspects",
    "aspect.aspects.integrateddynamics.read.boolean.thaumcraft.isaspectcontainer": "Is Aspect Container",
    "aspect.aspects.integrateddynamics.read.boolean.thaumcraft.isaspectcontainer.info": "If the given block can hold aspects.",
    "aspect.aspects.integrateddynamics.read.list.thaumcraft.aspectcontainer": "Aspect Container Aspects",
    "aspect.aspects.integrateddynamics.read.list.thaumcraft.aspectcontainer.info": "All aspects in the given aspect container.",
    "aspect.aspects.integrateddynamics.read.thaumcraftaspect.thaumcraft.aspectcontainer": "Aspect Container Aspect",
    "aspect.aspects.integrateddynamics.read.thaumcraftaspect.thaumcraft.aspectcontainer.info": "The selected aspect in the given aspect container.",
    "aspect.aspects.integrateddynamics.read.boolean.thaumcraft.isessentiatransport": "Is Essentia Transport",
    "aspect.aspects.integrateddynamics.read.boolean.thaumcraft.isessentiatransport.info": "If the target can transport essentia.",
    "aspect.aspects.integrateddynamics.read.boolean.thaumcraft.isessentiareceiver": "Is Essentia Receiver",
    "aspect.aspects.integrateddynamics.read.boolean.thaumcraft.isessentiareceiver.info": "If the target can receive essentia.",
    "aspect.aspects.integrateddynamics.read.boolean.thaumcraft.isessentiaprovider": "Is Essentia Provider",
    "aspect.aspects.integrateddynamics.read.boolean.thaumcraft.isessentiaprovider.info": "If the target can provide essentia.",
    "aspect.aspects.integrateddynamics.read.integer.thaumcraft.suction": "Essentia Transport Suction",
    "aspect.aspects.integrateddynamics.read.integer.thaumcraft.suction.info": "The current suction in the target essentia transport.",
    "aspect.aspects.integrateddynamics.read.thaumcraftaspect.thaumcraft.suction": "Essentia Transport Aspect Suction",
    "aspect.aspects.integrateddynamics.read.thaumcraftaspect.thaumcraft.suction.info": "The current aspect suction in the target essentia transport.",
    "aspect.aspects.integrateddynamics.read.thaumcraftaspect.thaumcraft.essentia": "Essentia Transport Contents",
    "aspect.aspects.integrateddynamics.read.thaumcraftaspect.thaumcraft.essentia.info": "The contained aspect in the target essentia transport.",
    "aspect.aspects.integrateddynamics.read.integer.thaumcraft.essentiaminsuction": "Essentia Minimum Suction",
    "aspect.aspects.integrateddynamics.read.integer.thaumcraft.essentiaminsuction.info": "The minimum required suction for the target essentia transport.",
    "aspect.aspects.integrateddynamics.read.double.thaumcraft.auravis": "Aura Vis",
    "aspect.aspects.integrateddynamics.read.double.thaumcraft.auravis.info": "How much vis is in the aura at the target location.",
    "aspect.aspects.integrateddynamics.read.double.thaumcraft.auraflux": "Aura Flux",
    "aspect.aspects.integrateddynamics.read.double.thaumcraft.auraflux.info": "How much flux is in the aura at the target location.",
    "aspect.aspects.integrateddynamics.read.integer.thaumcraft.aurabase": "Aura Base",
    "aspect.aspects.integrateddynamics.read.integer.thaumcraft.aurabase.info": "The aura baseline at the target location.",
    "aspect.aspects.integrateddynamics.read.list.thaumcraft.allaspects": "All Aspects",
    "aspect.aspects.integrateddynamics.read.list.thaumcraft.allaspects.info": "Get a list of all available Thaumcraft Aspects in the game.",

    "_comment": "# Operators",
    "operator.operators.integrateddynamics.itemstack.getitemthaumcraftaspects": "Thaumcraft Aspects",
    "operator.operators.integrateddynamics.itemstack.getitemthaumcraftaspects.info": "The list of Thaumcraft aspects this item has",

    "operator.operators.integrateddynamics.thaumcraft.aspect": "Thaumcraft Aspect",
    "operator.operators.integrateddynamics.thaumcraft.aspect.basename": "Thaumcraft Aspect %s",
    "operator.operators.integrateddynamics.thaumcraft.aspect.amount": "Vis Amount",
    "operator.operators.integrateddynamics.thaumcraft.aspect.amount.info": "The amount of vis in the aspect.",
    "operator.operators.integrateddynamics.thaumcraft.aspect.israwaspectequal": "Raw Aspect Equals",
    "operator.operators.integrateddynamics.thaumcraft.aspect.israwaspectequal.info": "If the given raw aspects are equal.",
    "operator.operators.integrateddynamics.thaumcraft.aspect.getcompoundaspects": "Compound Aspects",
    "operator.operators.integrateddynamics.thaumcraft.aspect.getcompoundaspects.info": "The list of aspects this aspect is made up of.",
    "operator.operators.integrateddynamics.thaumcraft.aspect.getcombinationaspect": "Combination Aspect",
    "operator.operators.integrateddynamics.thaumcraft.aspect.getcombinationaspect.info": "Get the combination aspect of the two given aspects.",
    "operator.operators.integrateddynamics.thaumcraft.aspect.isprimal": "Is Aspect Primal",
    "operator.operators.integrateddynamics.thaumcraft.aspect.isprimal.info": "If the given aspect is a primal aspect.",
    "operator.operators.integrateddynamics.thaumcraft.aspect.entityaspects": "Entity Aspects",
    "operator.operators.integrateddynamics.thaumcraft.aspect.entityaspects.info": "Get the list of aspects in the given entity.",

    "_comment": "# ----- RF ----- ##",

    "_comment": "# Aspects",
    "aspect.aspects.integrateddynamics.read.boolean.rf.applicable": "Is RF Handler",
    "aspect.aspects.integrateddynamics.read.boolean.rf.applicable.info": "If the target in some way handles RF",
    "aspect.aspects.integrateddynamics.read.boolean.rf.isreceiver": "Is RF Receiver",
    "aspect.aspects.integrateddynamics.read.boolean.rf.isreceiver.info": "If the target can receive RF",
    "aspect.aspects.integrateddynamics.read.boolean.rf.isprovider": "Is RF Provider",
    "aspect.aspects.integrateddynamics.read.boolean.rf.isprovider.info": "If the target can provide RF",
    "aspect.aspects.integrateddynamics.read.boolean.rf.canextract": "Can Extract RF",
    "aspect.aspects.integrateddynamics.read.boolean.rf.canextract.info": "If RF can really be extracted from the target, takes into account storage",
    "aspect.aspects.integrateddynamics.read.boolean.rf.caninsert": "Can Insert RF",
    "aspect.aspects.integrateddynamics.read.boolean.rf.caninsert.info": "If RF can really be inserted into the target, takes into account storage and capacity",
    "aspect.aspects.integrateddynamics.read.boolean.rf.isfull": "Is RF Buffer Full",
    "aspect.aspects.integrateddynamics.read.boolean.rf.isfull.info": "If the target's RF buffer is completely full",
    "aspect.aspects.integrateddynamics.read.boolean.rf.isempty": "Is RF Buffer Empty",
    "aspect.aspects.integrateddynamics.read.boolean.rf.isempty.info": "If the target's RF buffer is completely empty",
    "aspect.aspects.integrateddynamics.read.boolean.rf.isnonempty": "Is RF Buffer Not Empty",
    "aspect.aspects.integrateddynamics.read.boolean.rf.isnonempty.info": "If the target's RF buffer is not empty",
    "aspect.aspects.integrateddynamics.read.integer.rf.amount": "Stored RF",
    "aspect.aspects.integrateddynamics.read.integer.rf.amount.info": "The amount of RF stored in the target",
    "aspect.aspects.integrateddynamics.read.integer.rf.capacity": "RF Capacity",
    "aspect.aspects.integrateddynamics.read.integer.rf.capacity.info": "The RF capacity of the target",
    "aspect.aspects.integrateddynamics.read.double.rf.fillratio": "RF Fill Ratio",
    "aspect.aspects.integrateddynamics.read.double.rf.fillratio.info": "The amount of RF in the target divided by its capacity",

    "_comment": "# Operators",
    "operator.operators.integrateddynamics.itemstack.isrfcontainer": "Is RF Container",
    "operator.operators.integrateddynamics.itemstack.isrfcontainer.info": "If the given item can hold RF",
    "operator.operators.integrateddynamics.itemstack.storedrf": "RF Stored",
    "operator.operators.integrateddynamics.itemstack.storedrf.info": "The amount of RF stored in this item",
    "operator.operators.integrateddynamics.itemstack.rfcapacity": "RF Capacity",
    "operator.operators.integrateddynamics.itemstack.rfcapacity.info": "The maximum amount of RF that can be stored in this item",

    "_comment": "# ----- Tesla ----- ##",

    "_comment": "# Aspects",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.applicable": "Is Tesla Handler",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.applicable.info": "If the target in some way handles Tesla",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.isreceiver": "Is Tesla Receiver",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.isreceiver.info": "If the target can receive Tesla",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.isprovider": "Is Tesla Provider",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.isprovider.info": "If the target can provide Tesla",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.canextract": "Can Extract Tesla",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.canextract.info": "If Tesla can really be extracted from the target, takes into account storage",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.caninsert": "Can Insert Tesla",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.caninsert.info": "If Tesla can really be inserted into the target, takes into account storage and capacity",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.isfull": "Is Tesla Buffer Full",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.isfull.info": "If the target's Tesla buffer is completely full",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.isempty": "Is Tesla Buffer Empty",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.isempty.info": "If the target's Tesla buffer is completely empty",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.isnonempty": "Is Tesla Buffer Not Empty",
    "aspect.aspects.integrateddynamics.read.boolean.tesla.isnonempty.info": "If the target's Tesla buffer is not empty",
    "aspect.aspects.integrateddynamics.read.long.tesla.amount": "Stored Tesla",
    "aspect.aspects.integrateddynamics.read.long.tesla.amount.info": "The amount of Tesla stored in the target",
    "aspect.aspects.integrateddynamics.read.long.tesla.capacity": "Tesla Capacity",
    "aspect.aspects.integrateddynamics.read.long.tesla.capacity.info": "The Tesla capacity of the target",
    "aspect.aspects.integrateddynamics.read.double.tesla.fillratio": "Tesla Fill Ratio",
    "aspect.aspects.integrateddynamics.read.double.tesla.fillratio.info": "The amount of Tesla in the target divided by its capacity",
    "aspect.aspects.integrateddynamics.read.string.tesla.amount": "Stored Tesla",
    "aspect.aspects.integrateddynamics.read.string.tesla.amount.info": "The formatted amount of Tesla stored in the target",
    "aspect.aspects.integrateddynamics.read.string.tesla.capacity": "Tesla Capacity",
    "aspect.aspects.integrateddynamics.read.string.tesla.capacity.info": "The formatted Tesla capacity of the target",

    "_comment": "# Operators",
    "operator.operators.integrateddynamics.itemstack.isteslacontainer": "Is Tesla Container",
    "operator.operators.integrateddynamics.itemstack.isteslacontainer.info": "If the given item can hold Tesla",
    "operator.operators.integrateddynamics.itemstack.teslastored": "Tesla Stored",
    "operator.operators.integrateddynamics.itemstack.teslastored.info": "The amount of Tesla stored in this item",
    "operator.operators.integrateddynamics.itemstack.teslacapacity": "Tesla Capacity",
    "operator.operators.integrateddynamics.itemstack.teslacapacity.info": "The maximum amount of Tesla that can be stored in this item",
    "operator.operators.integrateddynamics.itemstack.isteslareceiver": "Is Tesla Receiver",
    "operator.operators.integrateddynamics.itemstack.isteslareceiver.info": "If the given item can receiver Tesla",
    "operator.operators.integrateddynamics.itemstack.isteslaprovider": "Is Tesla Provider",
    "operator.operators.integrateddynamics.itemstack.isteslaprovider.info": "If the given item can provide Tesla",
    "operator.operators.integrateddynamics.itemstack.isteslafull": "Is Tesla Buffer Full",
    "operator.operators.integrateddynamics.itemstack.isteslafull.info": "If the given item is full of Tesla energy",
    "operator.operators.integrateddynamics.itemstack.isteslaempty": "Is Tesla Buffer Empty",
    "operator.operators.integrateddynamics.itemstack.isteslaempty.info": "If the given item has no Tesla energy",
    "operator.operators.integrateddynamics.itemstack.isteslanonempty": "Is Tesla Buffer Not Empty",
    "operator.operators.integrateddynamics.itemstack.isteslanonempty.info": "If the given item has Tesla energy",
    "operator.operators.integrateddynamics.itemstack.teslafillratio": "Tesla Fill Ratio",
    "operator.operators.integrateddynamics.itemstack.teslafillratio.info": "The amount of Tesla in the item divided by its capacity",

    "_comment": "# ----- IC2 ----- ##",

    "_comment": "# Aspects",
    "aspect.aspects.integrateddynamics.read.boolean.ic2.eu.applicable": "Is EU Handler",
    "aspect.aspects.integrateddynamics.read.boolean.ic2.eu.applicable.info": "If the target in some way handles EU",
    "aspect.aspects.integrateddynamics.read.boolean.ic2.eu.canextract": "Can Extract EU",
    "aspect.aspects.integrateddynamics.read.boolean.ic2.eu.canextract.info": "If EU can really be extracted from the target, takes into account storage",
    "aspect.aspects.integrateddynamics.read.boolean.ic2.eu.caninsert": "Can Insert EU",
    "aspect.aspects.integrateddynamics.read.boolean.ic2.eu.caninsert.info": "If EU can really be inserted into the target, takes into account storage and capacity",
    "aspect.aspects.integrateddynamics.read.boolean.ic2.eu.isfull": "Is EU Buffer Full",
    "aspect.aspects.integrateddynamics.read.boolean.ic2.eu.isfull.info": "If the target's EU buffer is completely full",
    "aspect.aspects.integrateddynamics.read.boolean.ic2.eu.isempty": "Is EU Buffer Empty",
    "aspect.aspects.integrateddynamics.read.boolean.ic2.eu.isempty.info": "If the target's EU buffer is completely empty",
    "aspect.aspects.integrateddynamics.read.boolean.ic2.eu.isnonempty": "Is EU Buffer Not Empty",
    "aspect.aspects.integrateddynamics.read.boolean.ic2.eu.isnonempty.info": "If the target's EU buffer is not empty",
    "aspect.aspects.integrateddynamics.read.integer.ic2.eu.amount": "Stored EU",
    "aspect.aspects.integrateddynamics.read.integer.ic2.eu.amount.info": "The amount of EU stored in the target",
    "aspect.aspects.integrateddynamics.read.integer.ic2.eu.capacity": "EU Capacity",
    "aspect.aspects.integrateddynamics.read.integer.ic2.eu.capacity.info": "The EU capacity of the target",
    "aspect.aspects.integrateddynamics.read.double.ic2.eu.fillratio": "EU Fill Ratio",
    "aspect.aspects.integrateddynamics.read.double.ic2.eu.fillratio.info": "The amount of EU in the target divided by its capacity",

    "_comment": "# Operators",
    "operator.operators.integrateddynamics.itemstack.isic2eucontainer": "Is EU Container",
    "operator.operators.integrateddynamics.itemstack.isic2eucontainer.info": "If the given item can hold EU",
    "operator.operators.integrateddynamics.itemstack.storedic2eu": "EU Stored",
    "operator.operators.integrateddynamics.itemstack.storedic2eu.info": "The amount of EU stored in this item",
    "operator.operators.integrateddynamics.itemstack.ic2eucapacity": "EU Capacity",
    "operator.operators.integrateddynamics.itemstack.ic2eucapacity.info": "The maximum amount of EU that can be stored in this item",

    "_comment": "# ----- Refined Storage ----- ##",

    "_comment": "Aspect property types",
    "aspect.aspecttypes.integrateddynamics.boolean.refinedstorage.skipcrafting": "Skip If Crafting",
    "aspect.aspecttypes.integrateddynamics.boolean.refinedstorage.skipstorage": "Skip If In Storage",

    "_comment": "# Aspects",
    "aspect.aspects.integrateddynamics.read.boolean.refinedstorage.network.applicable": "Is RS Network",
    "aspect.aspects.integrateddynamics.read.boolean.refinedstorage.network.applicable.info": "If the target has a Refined Storage network.",
    "aspect.aspects.integrateddynamics.read.list.refinedstorage.inventory.itemstacks": "RS network items",
    "aspect.aspects.integrateddynamics.read.list.refinedstorage.inventory.itemstacks.info": "A list of all the items in the RS network.",
    "aspect.aspects.integrateddynamics.read.list.refinedstorage.inventory.craftableitems": "RS craftable items",
    "aspect.aspects.integrateddynamics.read.list.refinedstorage.inventory.craftableitems.info": "A list of all the craftable items in the RS network.",
    "aspect.aspects.integrateddynamics.read.list.refinedstorage.inventory.craftingitems": "RS crafting items",
    "aspect.aspects.integrateddynamics.read.list.refinedstorage.inventory.craftingitems.info": "A list of all the items that are currently being crafted in the RS network.",
    "aspect.aspects.integrateddynamics.read.list.refinedstorage.inventory.missingcraftingitems": "RS missing crafting items",
    "aspect.aspects.integrateddynamics.read.list.refinedstorage.inventory.missingcraftingitems.info": "A list of all the missing items in the current crafting jobs for the RS network.",
    "aspect.aspects.integrateddynamics.read.list.refinedstorage.fluid.fluidstacks": "RS network fluids",
    "aspect.aspects.integrateddynamics.read.list.refinedstorage.fluid.fluidstacks.info": "A list of all the fluids in the RS network.",

    "aspect.aspects.integrateddynamics.write.itemstack.refinedstorage.craft": "RS craft item",
    "aspect.aspects.integrateddynamics.write.itemstack.refinedstorage.craft.info": "Trigger a crafting job for the given item.",
    "aspect.aspects.integrateddynamics.write.list.refinedstorage.craft": "RS craft items",
    "aspect.aspects.integrateddynamics.write.list.refinedstorage.craft.info": "Trigger a crafting job for all the items in the given list.",
    "aspect.aspects.integrateddynamics.write.boolean.refinedstorage.cancelcraft": "RS cancel all crafting jobs",
    "aspect.aspects.integrateddynamics.write.boolean.refinedstorage.cancelcraft.info": "Cancel all running crafting jobs in the RS network.",
    "aspect.aspects.integrateddynamics.write.itemstack.refinedstorage.cancelcraft": "RS cancel crafting jobs",
    "aspect.aspects.integrateddynamics.write.itemstack.refinedstorage.cancelcraft.info": "Cancel all running crafting jobs for the given item in the RS network.",
    "aspect.aspects.integrateddynamics.write.list.refinedstorage.cancelcraft": "RS cancel crafting jobs",
    "aspect.aspects.integrateddynamics.write.list.refinedstorage.cancelcraft.info": "Cancel all running crafting jobs for the given items in the RS network.",

    "_comment": "# ----- Signals ----- ##",

    "_comment": "# Aspects",
    "aspect.aspects.integrateddynamics.write.list.signals.destinations": "Signals Minecart Destinations",
    "aspect.aspects.integrateddynamics.write.list.signals.destinations.info": "Set a new destination list on a minecart.",
    "aspect.aspects.integrateddynamics.write.integer.signals.destindex": "Signals Minecart Destination Index",
    "aspect.aspects.integrateddynamics.write.integer.signals.destindex.info": "Set the (zero-based) index of a minecart's next destination."
}